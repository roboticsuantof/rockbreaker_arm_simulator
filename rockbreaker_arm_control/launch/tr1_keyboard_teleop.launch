<launch>
  <!-- <rosparam file="$(find rockbreaker_arm_simulator)/rockbreaker_arm_control/cfg/hardware.yaml" command="load"/> -->
  <rosparam file="$(find rockbreaker_arm_simulator)/rockbreaker_arm_control/cfg/rockbreaker_arm_position.yaml" command="load"/>
  <!-- <rosparam file="$(find rockbreaker_arm_simulator)/rockbreaker_arm_control/cfg/joint_limits.yaml" command="load"/>
  <rosparam file="$(find rockbreaker_arm_simulator)/rockbreaker_arm_control/cfg/fake_joint_offsets.yaml" command="load"/>
	<param name="joint_offsets_path" type="string" value="$(find rockbreaker_arm_simulator)/rockbreaker_arm_control/cfg/joint_offsets.yaml" /> -->

  <!-- <node name="rockbreaker_arm_simulator" pkg="rockbreaker_arm_simulator" type="rockbreaker_arm_simulator_node" output="screen" required="true" /> -->
  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" ns="/rockbreaker_arm" required="true"
		args= "joint_state_controller joint1_position_controller joint2_position_controller joint3_position_controller joint4_position_controller"/>

   <node pkg="tr1_keyboard_teleop" name="tr1_keyboard_teleop_node" type="tr1_keyboard_teleop_node.py" output="screen" required="true" />
	
   <!--convert joint states to TF transforms for rviz, etc -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen">
    <remap from="/joint_states" to="/rockbreaker_arm/joint_states" />
  </node>

</launch>	